!function(t){var n={};function e(r){if(n[r])return n[r].exports;var o=n[r]={i:r,l:!1,exports:{}};return t[r].call(o.exports,o,o.exports,e),o.l=!0,o.exports}e.m=t,e.c=n,e.d=function(t,n,r){e.o(t,n)||Object.defineProperty(t,n,{enumerable:!0,get:r})},e.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},e.t=function(t,n){if(1&n&&(t=e(t)),8&n)return t;if(4&n&&"object"==typeof t&&t&&t.__esModule)return t;var r=Object.create(null);if(e.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:t}),2&n&&"string"!=typeof t)for(var o in t)e.d(r,o,function(n){return t[n]}.bind(null,o));return r},e.n=function(t){var n=t&&t.__esModule?function(){return t.default}:function(){return t};return e.d(n,"a",n),n},e.o=function(t,n){return Object.prototype.hasOwnProperty.call(t,n)},e.p="",e(e.s=0)}([function(module,exports){eval('function openTab(filename) {\n\tvar myid = chrome.i18n.getMessage("@@extension_id");chrome.windows.getCurrent(function (win) {\n\t\tchrome.tabs.query({ \'windowId\': win.id }, function (tabArray) {\n\t\t\tfor (var i in tabArray) {\n\t\t\t\tif (tabArray[i].url == "chrome-extension://" + myid + "/" + filename) {\n\t\t\t\t\t// console.log("already opened");\n\t\t\t\t\tchrome.tabs.update(tabArray[i].id, { active: true });return;\n\t\t\t\t}\n\t\t\t}chrome.tabs.create({ url: chrome.extension.getURL(filename) });\n\t\t});\n\t});\n}\n\nopenTab("index.html");\n\nfunction isNewTab(tab, url) {\n\treturn typeof url === \'undefined\' && tab.active && tab.url === \'chrome://newtab/\';\n}\nchrome.browserAction.onClicked.addListener(function (activeTab, url) {\n\tif (isNewTab(activeTab, url)) {\n\t\topenTab("index.html");\n\t}\n});\n\nvar tport;\nvar state = {\n\trpcConnected: false,\n\trpcStarted: false\n};\nfunction stopRPCServer() {\n\tconsole.log("sending pong to native app");\n\ttport.postMessage({ text: "pong" });\n}\n\nfunction startRPCServer() {\n\ttport = chrome.runtime.connectNative(\'optract\');\n\ttport.onMessage.addListener(function (msgs) {\n\t\tconsole.log(msgs);\n\t});\n\ttport.postMessage({ text: "ping" });\n}\nchrome.runtime.onConnect.addListener(function (port) {\n\tport.onMessage.addListener(function (msg) {\n\t\t// Need to put nativeApp.py under dist directory, and update the optract.json under ~/.config/google-chrome/NativeMessagingHosts \n\t\t// to use nativeApp.py\n\t\tstartRPCServer();\n\t});\n\n\tport.onDisconnect.addListener(function () {\n\t\t// tport.disconnect();\n\t\tstopRPCServer();\n\t});\n});\n\nfunction connectRPC() {}\n\n// setTimeout(stopRPCServer, 15000)\n// setTimeout(startRPCServer, 30000)\n\n//# sourceURL=webpack:///./scripts/background.js?')}]);